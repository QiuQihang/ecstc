%!PS-Adobe-2.0
%%Title: output.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Aug  9 12:14:14 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
3941 0 R
-63 0 V
714 420 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
798 1480 M
63 0 V
3941 0 R
-63 0 V
-4025 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
798 2540 M
63 0 V
3941 0 R
-63 0 V
-4025 0 R
gsave 0 setgray
( 2000) Rshow
grestore
1.000 UL
LTb
798 3600 M
63 0 V
3941 0 R
-63 0 V
-4025 0 R
gsave 0 setgray
( 3000) Rshow
grestore
1.000 UL
LTb
798 4660 M
63 0 V
3941 0 R
-63 0 V
-4025 0 R
gsave 0 setgray
( 4000) Rshow
grestore
1.000 UL
LTb
798 5720 M
63 0 V
3941 0 R
-63 0 V
-4025 0 R
gsave 0 setgray
( 5000) Rshow
grestore
1.000 UL
LTb
798 6780 M
63 0 V
3941 0 R
-63 0 V
-4025 0 R
gsave 0 setgray
( 6000) Rshow
grestore
1.000 UL
LTb
798 420 M
0 63 V
0 6297 R
0 -63 V
798 280 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
1243 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 2000) Cshow
grestore
1.000 UL
LTb
1688 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 4000) Cshow
grestore
1.000 UL
LTb
2133 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 6000) Cshow
grestore
1.000 UL
LTb
2578 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 8000) Cshow
grestore
1.000 UL
LTb
3022 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 10000) Cshow
grestore
1.000 UL
LTb
3467 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 12000) Cshow
grestore
1.000 UL
LTb
3912 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 14000) Cshow
grestore
1.000 UL
LTb
4357 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 16000) Cshow
grestore
1.000 UL
LTb
4802 420 M
0 63 V
0 6297 R
0 -63 V
0 -6437 R
gsave 0 setgray
( 18000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
798 420 M
4004 0 V
0 6360 V
-4004 0 V
798 420 L
LTb
140 3600 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(estimated betweenness centrality) Cshow
grestore
grestore
LTb
2800 70 M
gsave 0 setgray
(actual betweenness centrality) Cshow
grestore
LTb
2800 6990 M
gsave 0 setgray
(10.1.2500) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
4151 6647 M
gsave 0 setgray
(10.1.2500.dat) Rshow
grestore
LT0
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 420 Pls
798 421 Pls
885 831 Pls
950 1149 Pls
825 541 Pls
859 698 Pls
866 716 Pls
798 452 Pls
812 519 Pls
798 452 Pls
798 455 Pls
798 456 Pls
798 456 Pls
798 456 Pls
812 526 Pls
805 496 Pls
815 457 Pls
808 516 Pls
798 470 Pls
798 471 Pls
798 472 Pls
798 473 Pls
821 587 Pls
817 452 Pls
798 478 Pls
798 480 Pls
798 481 Pls
821 463 Pls
821 461 Pls
798 488 Pls
798 489 Pls
821 461 Pls
825 630 Pls
833 501 Pls
864 651 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
859 625 Pls
798 507 Pls
798 512 Pls
852 579 Pls
883 723 Pls
800 530 Pls
865 861 Pls
798 549 Pls
798 552 Pls
798 552 Pls
798 568 Pls
798 575 Pls
868 916 Pls
924 851 Pls
920 827 Pls
920 827 Pls
920 827 Pls
920 828 Pls
920 828 Pls
851 857 Pls
845 446 Pls
1011 1224 Pls
862 481 Pls
873 521 Pls
980 1027 Pls
981 1030 Pls
981 1030 Pls
981 1030 Pls
1043 1326 Pls
879 524 Pls
898 584 Pls
1040 1226 Pls
1040 1226 Pls
1026 1137 Pls
828 949 Pls
1019 1078 Pls
976 871 Pls
985 905 Pls
990 870 Pls
920 515 Pls
920 510 Pls
1721 4321 Pls
920 498 Pls
1159 1621 Pls
1160 1624 Pls
1054 1088 Pls
951 575 Pls
1217 1835 Pls
1106 1305 Pls
1140 1466 Pls
1141 1467 Pls
1220 1830 Pls
958 550 Pls
980 634 Pls
1046 948 Pls
1065 960 Pls
1041 821 Pls
995 586 Pls
979 466 Pls
1095 949 Pls
1020 592 Pls
995 463 Pls
1100 965 Pls
1038 654 Pls
1026 567 Pls
1280 1622 Pls
1040 452 Pls
1078 618 Pls
1249 1372 Pls
1334 1757 Pls
1161 916 Pls
1080 439 Pls
1374 1795 Pls
1219 1018 Pls
1133 575 Pls
1252 1072 Pls
1209 866 Pls
1399 1663 Pls
1256 982 Pls
1277 1030 Pls
1221 504 Pls
1571 2131 Pls
1540 1803 Pls
1302 528 Pls
1367 835 Pls
1334 663 Pls
1469 1107 Pls
1449 908 Pls
1624 1469 Pls
1766 1995 Pls
1627 1192 Pls
1899 1843 Pls
1661 608 Pls
1816 1296 Pls
2669 3109 Pls
3244 4895 Pls
4390 6473 Pls
4434 6647 Pls
1.000 UL
LTb
798 420 M
4004 0 V
0 6360 V
-4004 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
